"Hereâ€™s the SplitDine Flutter build system weâ€™re following â€” continue with this approach."

SplitDine Flutter Dev Guide â€“ MVP Style
Weâ€™re building function-first, using a light structure that allows fast development without tech debt.

ðŸ§± Project Structure
lib/screens/ â†’ Each screen in its own file

lib/api/ â†’ REST API wrappers (one per feature group screen)

lib/styles/ â†’ Central styling: padding, colors, text styles

lib/main.dart â†’ Contains ThemeData for global styling

ðŸŽ¨ UI/UX Strategy
Use ThemeData for consistent global styling (buttons, inputs, app bars)

Use styles.dart for shared paddings, colors, error text, etc.

Donâ€™t focus on responsiveness or animation right now

âœ… Goals
Prioritize MVP functionality

Use auth + token flow

Reuse components when natural

Make styling consistent without over-engineering

âœ… If unsure, keep it simple and working.
ðŸŽ¯ Fast, clean, and expandable.


